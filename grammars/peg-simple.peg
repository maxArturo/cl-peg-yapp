# PEG simplified
# This is the flavor of PEG that `cl-peg-yapp` works with. 
# It's simplified from the more hardcore PEGN for my use cases.

Grammar    <- ComEndLine* (Definition ComEndLine*)+

# Comment/indenting section
ComEndLine <- ' '* ('# ' Comment)? EndLine
Comment    <- (!EndLine unipoint)+
Spacing    <- ComEndLine? ' '+
EndLine    <-   u000D         # CR
              / u000A         # LF
              / (u000D u000A) # CR/LF

# Definition section
Definition <- CheckId ' '+ '<-' ' '+ Expression 

CheckId    <- ([A-Z] [a-z]+)+
Expression <- Sequence (Spacing* '/' ' '* Sequence)*
Sequence   <- Rule (Spacing Rule)*

Rule       <- PosLook / NegLook / Plain
PosLook    <- '&' Primary Quant?
NegLook    <- '!' Primary Quant?
Plain      <- Primary Quant?

Primary    <- Simple / CheckId / '(' Expression ')'

Simple     <-   unipoint 
              / '[' (!']' ( (alphanum '-' alphanum) / alphanum) )+ ']'
              / string

Quant      <- Optional / MinZero / MinOne / MinMax / Amount

Optional   <- '?'
MinZero    <- '*'
Minone     <- '+'
MinMax     <- '{' numeric ',' numeric '}'
Amount     <- '{' numeric '}'

